(()=>{"use strict";var n={426:(n,r,e)=>{e.d(r,{Z:()=>u});var t=e(537),o=e.n(t),a=e(645),i=e.n(a),s=e(667),c=e.n(s),A=new URL(e(722),e.b),l=i()(o()),d=c()(A);l.push([n.id,`* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-image: linear-gradient(\n    to right,\n    #5842c2,\n    #5449bd,\n    #514eb7,\n    #5053b0,\n    #5057a9,\n    #5462ad,\n    #5a6db0,\n    #6177b2,\n    #708bbf,\n    #81a0cb,\n    #96b4d6,\n    #adc8e1\n  );\n}\n\nh1 {\n  position: absolute;\n  top: 10px;\n}\n\n#board-container {\n  position: relative;\n  width: 30rem;\n  height: 30rem;\n  border: solid black;\n  background-color: black;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n  grid-template-rows: repeat(8, 1fr);\n}\n\n.cell {\n  width: 100%;\n  height: 100%;\n}\n\n.white {\n  background-color: whitesmoke;\n}\n\n.knight {\n  background-image: url(${d});\n  background-repeat: no-repeat;\n  background-position: center;\n}\n\n.hidden {\n  display: none;\n}\n\n.modal {\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  backdrop-filter: blur(10px);\n  z-index: 100;\n}\n\n.msg-box {\n  position: absolute;\n  width: 20rem;\n  height: 10rem;\n  text-align: center;\n  padding: 20px;\n  background-color: whitesmoke;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  box-shadow: rgba(0, 0, 0, 0.541) 0px 5px 15px;\n  border-radius: 10px;\n  z-index: 200;\n}\n\n.btn-txt-container {\n  position: absolute;\n  bottom: 20px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: repeat(2, 1fr);\n  column-gap: 100px;\n  row-gap: 10px;\n  place-content: center;\n}\n\n.start-pos-div,\n.end-pos-div {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n#submitPos,\n#resetPos {\n  padding: 5px;\n  border-radius: 10px;\n  border: none;\n  background-color: rgb(109, 236, 131);\n}\n\n#resetPos {\n  background-color: rgb(233, 114, 114);\n}\n\n#submitPos:hover,\n#resetPos:hover {\n  background-color: whitesmoke;\n  color: #000;\n  cursor: pointer;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB;;;;;;;;;;;;;;GAcC;AACH;;AAEA;EACE,kBAAkB;EAClB,SAAS;AACX;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,4CAA4C;EAC5C,aAAa;EACb,qCAAqC;EACrC,kCAAkC;AACpC;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,4BAA4B;AAC9B;;AAEA;EACE,yDAAiD;EACjD,4BAA4B;EAC5B,2BAA2B;AAC7B;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,2BAA2B;EAC3B,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,kBAAkB;EAClB,aAAa;EACb,4BAA4B;EAC5B,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,6CAA6C;EAC7C,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,kCAAkC;EAClC,iBAAiB;EACjB,aAAa;EACb,qBAAqB;AACvB;;AAEA;;EAEE,aAAa;EACb,mBAAmB;EACnB,SAAS;AACX;;AAEA;;EAEE,YAAY;EACZ,mBAAmB;EACnB,YAAY;EACZ,oCAAoC;AACtC;;AAEA;EACE,oCAAoC;AACtC;;AAEA;;EAEE,4BAA4B;EAC5B,WAAW;EACX,eAAe;AACjB",sourcesContent:['* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-image: linear-gradient(\r\n    to right,\r\n    #5842c2,\r\n    #5449bd,\r\n    #514eb7,\r\n    #5053b0,\r\n    #5057a9,\r\n    #5462ad,\r\n    #5a6db0,\r\n    #6177b2,\r\n    #708bbf,\r\n    #81a0cb,\r\n    #96b4d6,\r\n    #adc8e1\r\n  );\r\n}\r\n\r\nh1 {\r\n  position: absolute;\r\n  top: 10px;\r\n}\r\n\r\n#board-container {\r\n  position: relative;\r\n  width: 30rem;\r\n  height: 30rem;\r\n  border: solid black;\r\n  background-color: black;\r\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  display: grid;\r\n  grid-template-columns: repeat(8, 1fr);\r\n  grid-template-rows: repeat(8, 1fr);\r\n}\r\n\r\n.cell {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.white {\r\n  background-color: whitesmoke;\r\n}\r\n\r\n.knight {\r\n  background-image: url("/src/svg-file/knight.svg");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n}\r\n\r\n.hidden {\r\n  display: none;\r\n}\r\n\r\n.modal {\r\n  position: absolute;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  backdrop-filter: blur(10px);\r\n  z-index: 100;\r\n}\r\n\r\n.msg-box {\r\n  position: absolute;\r\n  width: 20rem;\r\n  height: 10rem;\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: whitesmoke;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  box-shadow: rgba(0, 0, 0, 0.541) 0px 5px 15px;\r\n  border-radius: 10px;\r\n  z-index: 200;\r\n}\r\n\r\n.btn-txt-container {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-template-rows: repeat(2, 1fr);\r\n  column-gap: 100px;\r\n  row-gap: 10px;\r\n  place-content: center;\r\n}\r\n\r\n.start-pos-div,\r\n.end-pos-div {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n}\r\n\r\n#submitPos,\r\n#resetPos {\r\n  padding: 5px;\r\n  border-radius: 10px;\r\n  border: none;\r\n  background-color: rgb(109, 236, 131);\r\n}\r\n\r\n#resetPos {\r\n  background-color: rgb(233, 114, 114);\r\n}\r\n\r\n#submitPos:hover,\r\n#resetPos:hover {\r\n  background-color: whitesmoke;\r\n  color: #000;\r\n  cursor: pointer;\r\n}\r\n'],sourceRoot:""}]);const u=l},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);t&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),e&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=e):l[2]=e),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),r.push(l))}},r}},667:n=>{n.exports=function(n,r){return r||(r={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),r.hash&&(n+=r.hash),/["'() \t\n]|(%20)/.test(n)||r.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[r].concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],A=t.base?c[0]+t.base:c[0],l=a[A]||0,d="".concat(A," ").concat(l);a[A]=l+1;var u=e(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)r[u].references++,r[u].updater(p);else{var f=o(p,t);t.byIndex=s,r.splice(s,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=e(a[i]);r[s].references--}for(var c=t(n,o),A=0;A<a.length;A++){var l=e(a[A]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}a=c}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},722:(n,r,e)=>{n.exports=e.p+"161c8461993678135a1b.svg"}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var a=r[t]={id:t,exports:{}};return n[t](a,a.exports,e),a.exports}e.m=n,e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&!n;)n=t[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.b=document.baseURI||self.location.href,e.nc=void 0,(()=>{var n=e(379),r=e.n(n),t=e(795),o=e.n(t),a=e(569),i=e.n(a),s=e(565),c=e.n(s),A=e(216),l=e.n(A),d=e(589),u=e.n(d),p=e(426),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),r()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const b=document.querySelectorAll(".cell");function g(n){b.forEach((n=>{n.classList.remove("knight")}));const r=Array.from(b).findIndex((r=>r.id===n));return b[r].classList.add("knight")}const m=document.querySelector("#start-pos-coord"),h=document.querySelector("#end-pos-coord"),C=document.querySelector(".modal"),E=document.querySelector(".msg-box"),x=document.querySelector("#resetPos"),v=document.querySelector("#submitPos");let y,B=null,k=null;function w(n){const r=n.split(",");return r[0]=Number(r[0]),r[1]=Number(r[1]),r}function S(n){E.textContent=n,C.classList.remove("hidden")}document.querySelectorAll(".cell").forEach((n=>{n.addEventListener("click",(function(){null===B?(B=w(n.id),g(n.id),m.textContent=`[${B}]`):null===k&&(k=w(n.id),h.textContent=`[${k}]`)}))}));const Y=(n,r,e=null,t=!1,o=null)=>({x:n,y:r,distance:e,visited:t,prev:o}),$=(n,r)=>{let e=[{x:n+2,y:r+1},{x:n+2,y:r-1},{x:n-2,y:r+1},{x:n-2,y:r-1},{x:n+1,y:r+2},{x:n-1,y:r+2},{x:n-1,y:r-2},{x:n+1,y:r-2}];return e=e.filter((n=>n.x>=0&&n.x<=7&&n.y>=0&&n.y<=7)),e};function q(n){let r,e;return r=n[1],e=n[3],{x:r,y:e}}new Array(8).fill(null).map((()=>new Array(8).fill(null))),v.addEventListener("click",(function(){const n=B,r=k;if(null===n||null===r)return void S("Please select start and end position");const e=((n,r)=>{const e=new Set,t=n[0],o=n[1];let a=Y(t,o,0,!0,null);e.add(`${t}, ${o}`);const i=(()=>{const n=[];return{el:()=>n,enqueue:r=>n.push(r),dequeue:()=>n.shift(),isEmpty:()=>0===n.length}})();for(i.enqueue(a);!i.isEmpty();){const n=i.dequeue();if(n.x===r[0]&&n.y===r[1]){const r=[];let e=n;for(;null!==e;)r.unshift([e.x,e.y]),e=e.prev;y=[r[0]];for(let n=1;n<r.length;n++)y[n]=`[${r[n]}]`;return y[0]=`[${y[0]}]`,`Amount of moves: ${r.length},\nYour path: ${y}`}{const r=$(n.x,n.y);for(let t of r){const r=Y(t.x,t.y,n.distance+1,!0),o=`${t.x}, ${t.y}`;e.has(o)||(e.add(o),r.prev=n,i.enqueue(r))}}}return null})(n,r);if(null!==e){S(e);for(let n of y){const r=q(n).x,e=q(n).y,t=document.getElementById(`${r},${e}`);t.style.border="solid #000 1px",t.style.backgroundColor="#0080ff",g(`${r},${e}`)}}else S("No path found")})),x.addEventListener("click",(function(){return window.location.reload()})),C.addEventListener("click",(function(){C.classList.add("hidden"),E.textContent=""}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,